I18n.setPluralRule('en', function (n) {if(!I18n.isInteger(n))return"other";if(n===1)return"one";return"other" });I18n.configure({"locale":"en_US","country":"US","translations":{"js":{"modules":{"personalize_wizard":{"places_step":{"errors":{"required":"Location can't be blank","not_done_yet":"Not done yet!"}},"place":{"errors":{"required":"Location can't be blank"}}}}},"number":{"symbols":{"decimal":".","group":",","list":";","percentSign":"%","plusSign":"+","minusSign":"-","exponential":"E","perMille":"‰","infinity":"∞","nan":"NaN","currency":{"EUR":"€","XCD":"EC$","USD":"$","AUD":"A$","XOF":"CFA","BRL":"R$","CAD":"C$","XAF":"FCFA","NZD":"NZ$","CNY":"CN¥","GBP":"£","HKD":"HK$","ILS":"₪","INR":"₹","JPY":"¥","KRW":"₩","MXN":"MX$","XPF":"CFPF","PLN":"zł","THB":"฿","TWD":"NT$","VND":"₫"}},"formats":{"scientific":"#E0","decimal":"#,##0.###","currency":"¤#,##0.00;(¤#,##0.00)","percent":"#,##0%"},"defaultCurrency":"USD"}},"scope":"js"});I18n.mixin=function (viewCtx, _i18n) { var HTML_ESCAPE, HTML_ESCAPE_REGEXP, isNumber, PLACEHOLDER, TRANSLATED_ATTRIBUTES; TRANSLATED_ATTRIBUTES = { alt: true, height: true, width: true }; PLACEHOLDER = /(?:\{\{|%\{)\s*(.*?)\s*(?:\}\}?)/gm; HTML_ESCAPE = { '"': '&quot;', '<': '&lt;', '>': '&gt;' }; HTML_ESCAPE_REGEXP = /["<>]/g; isNumber = function (n) { return !isNaN(parseFloat(n)) && isFinite(n); }; if (null != viewCtx) viewCtx; else viewCtx = {}; if (!(null != _i18n) && ('undefined' !== typeof I18n && null != I18n)) _i18n = I18n; viewCtx.locale = _i18n.locale; viewCtx.country = _i18n.country; viewCtx.lang = _i18n.lang; viewCtx.translate = viewCtx.t = function (text) { var args, err, key, opts; args = text.split(','); key = args.shift().replace(/\s+/g, ''); if (args.length) { args = args.join(',').trim().replace(PLACEHOLDER, function (this$) { return function (_, keyPath) { var value; value = this$; keyPath.split('.').forEach(function (keyPart) { if (!(null != value && 'object' === typeof value)) return null; return value = value[keyPart]; }); return JSON.stringify(null != value ? value : null); }; }(this)); try { opts = JSON.parse(args.replace(/^\s*([^{\s][\S\s]*[^\s])\s*$/, '{$1}')); } catch (e$) { err = e$; err.message += ' in translate-options for key ' + key; throw err; } } return _i18n.t(key, null != opts ? opts : {}); }; viewCtx.translateimg = function (json) { var hash, imgAttrs, key, value; imgAttrs = []; hash = JSON.parse(json); for (key in hash) { value = hash[key]; if (TRANSLATED_ATTRIBUTES[key]) { if (!isNumber(value)) { value = _i18n.t(value).toString().replace(HTML_ESCAPE_REGEXP, function (specialChar) { return HTML_ESCAPE[specialChar]; }); } } else if (key === 'src') { value = '/images/' + _i18n.locale + '/' + value; } imgAttrs.push('' + key + '="' + value + '"'); } imgAttrs = imgAttrs.join(' '); return '<img ' + imgAttrs + '/>'; }; return viewCtx; }